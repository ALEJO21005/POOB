#BlueJ class context
comment0.target=Puzzle
comment0.text=\r\n\ Un\ puzzle\ que\ simula\ el\ problema\ de\ Tilting\ Tiles\r\n\r\n\ @author\ \ Santiago\ Carmona,\ Sergio\ Idarraga\r\n\ @version\ 1.0\ \ (08\ Sept\ 2024)()\r\n
comment1.params=h\ w
comment1.target=Puzzle(int,\ int)
comment1.text=\r\n\ Crea\ un\ nuevo\ Puzzle\ generando\ los\ tableros\ de\ forma\ aleatoria\ e\ indicado\ solo\ las\ dimensiones.\r\n
comment10.params=rows\ columns
comment10.target=char[][]\ createMatrix(int,\ int)
comment11.params=
comment11.target=void\ makeVisible()
comment11.text=\r\n\ Permite\ hacer\ visible\ los\ puzzles\r\n
comment12.params=
comment12.target=void\ makeInvisible()
comment12.text=\r\n\ Permite\ hacer\ invisible\ los\ puzzles\r\n
comment13.params=row\ column\ color
comment13.target=void\ addTile(int,\ int,\ char)
comment13.text=\r\n\ A\u00F1ade\ una\ nueva\ baldosa\ al\ tablero\r\n
comment14.params=row\ column
comment14.target=void\ deleteTile(int,\ int)
comment14.text=\r\n\ Elimina\ una\ baldosa\ del\ puzzle\r\n
comment15.params=from\ to
comment15.target=void\ relocateTile(int[],\ int[])
comment15.text=\r\n\ Mueve\ de\ lugar\ una\ baldosa\ indicada\ por\ teclado\r\n
comment16.params=direction
comment16.target=void\ tilt(char)
comment16.text=\r\n\ Gira\ el\ tablero\ en\ la\ direcci\u00F3n\ indicada\ por\ teclado\r\n
comment17.params=i\ direction
comment17.target=java.util.ArrayList\ minMoves(int,\ char)
comment18.params=i\ direction
comment18.target=void\ tiltGlued(int,\ char)
comment19.params=i\ moves
comment19.target=void\ moveRight(int,\ int)
comment2.params=starting\ ending
comment2.target=Puzzle(char[][],\ char[][])
comment2.text=\r\n\ Crea\ un\ nuevo\ Puzzle\ indicado\ el\ tablero\ inicial\ y\ final\r\n
comment20.params=i\ moves
comment20.target=void\ moveLeft(int,\ int)
comment21.params=Array
comment21.target=int\ min(java.util.ArrayList)
comment22.params=row
comment22.target=boolean\ isRoot(Tile[])
comment23.params=row
comment23.target=boolean\ isGlued(Tile[])
comment24.params=direction
comment24.target=void\ tiltEnding(char)
comment25.params=row\ direction
comment25.target=int\ calculateMoves(Tile[],\ char)
comment26.params=array
comment26.target=void\ printAsPythonArray(int[])
comment27.params=row\ movimientos\ countGlued
comment27.target=Tile[]\ moveRight(Tile[],\ int,\ boolean)
comment28.params=row\ movimientos\ countGlued
comment28.target=Tile[]\ moveLeft(Tile[],\ int,\ boolean)
comment29.params=board
comment29.target=Tile[][]\ moveUp(Tile[][])
comment3.params=ending
comment3.target=Puzzle(char[][])
comment3.text=\r\n\ Crea\ un\ nuevo\ Puzzle\ indicado\ solamente\ el\ tablero\ final\r\n
comment30.params=board
comment30.target=Tile[][]\ moveDown(Tile[][])
comment31.params=row
comment31.target=int\ getCount(Tile[])
comment32.params=col\ board
comment32.target=int\ getCountColumn(int,\ Tile[][])
comment33.params=count\ row
comment33.target=int[]\ getPosicionFichas(int,\ Tile[])
comment34.params=count\ col\ board
comment34.target=int[]\ getPosicionFichasColumn(int,\ int,\ Tile[][])
comment35.params=count\ row\ fichas\ direction
comment35.target=int\ getMoves(int,\ Tile[],\ int[],\ char)
comment36.params=count\ col\ board\ fichas\ direction
comment36.target=int\ getMovesColumn(int,\ int,\ Tile[][],\ int[],\ char)
comment37.params=
comment37.target=boolean\ isGoal()
comment37.text=\r\n\ Retorna\ si\ el\ tablero\ inicial\ es\ igual\ al\ tablero\ final\r\n
comment38.params=matriz
comment38.target=void\ print(char[][])
comment39.params=
comment39.target=char[][]\ actualArrangement()
comment39.text=\r\n\ Imprime\ el\ estado\ actual\ del\ tablero\ en\ formato\ matriz\r\n
comment4.params=tablero\ baldosas
comment4.target=void\ push(char[][],\ Tile[][])
comment40.params=row
comment40.target=int\ indexForRow(Tile[])
comment41.params=row
comment41.target=int\ indexForColumn(Tile[])
comment42.params=row\ column
comment42.target=void\ addGlue(int,\ int)
comment43.params=matrixReference\ tablero
comment43.target=void\ pushCharMatrix(char[][],\ char[][])
comment44.params=
comment44.target=void\ exchangeCharMatrix()
comment45.params=
comment45.target=void\ exchange()
comment46.params=row\ column
comment46.target=void\ makeHole(int,\ int)
comment47.params=
comment47.target=void\ showHoleAgain()
comment48.params=
comment48.target=void\ misplacedTiles()
comment49.params=
comment49.target=void\ finish()
comment49.text=\r\n\ Finaliza\ la\ ejecuci\u00F3n\ del\ programa\ y\ no\ se\ puede\ hacer\ ning\u00FAn\ otro\ movimiento.\r\n
comment5.params=tablero\ baldosas
comment5.target=void\ endingPush(char[][],\ Tile[][])
comment6.params=Array
comment6.target=int\ getArrayPosition(Tile[])
comment7.params=
comment7.target=char[][]\ getStarting()
comment8.params=
comment8.target=char[][]\ getEnding()
comment9.params=color
comment9.target=java.lang.String\ calculateColor(char)
numComments=50
